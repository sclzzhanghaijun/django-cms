# Generated by Django 2.0.3 on 2018-03-30 01:27

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PAdminGroups',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=255)),
                ('group_status', models.PositiveIntegerField(default=0)),
                ('group_description', models.CharField(max_length=1000)),
                ('is_delete', models.PositiveIntegerField(default=0)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'p_admin_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PAdminGroupsPermission',
            fields=[
                ('permission_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.PositiveIntegerField()),
                ('menu_id', models.PositiveIntegerField()),
                ('route_permission', models.CharField(max_length=1000)),
                ('is_delete', models.PositiveIntegerField(default=0)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'p_admin_groups_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PAdminGroupsUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.PositiveIntegerField()),
                ('admin_id', models.PositiveIntegerField()),
                ('is_delete', models.PositiveIntegerField(default=0)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'p_admin_groups_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PArticle',
            fields=[
                ('article_id', models.AutoField(primary_key=True, serialize=False, verbose_name='文章ID')),
                ('article_title', models.CharField(max_length=100, verbose_name='标题')),
                ('article_content', models.TextField(verbose_name='正文')),
                ('thumb', models.CharField(max_length=200, verbose_name='缩略图')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_modified_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '草稿状态'), (1, '上线状态'), (2, '下线状态')], default=0, verbose_name='文章状态')),
                ('article_abstract', models.CharField(blank=True, help_text='可选项，若为空格则摘取正文钱54个字符', max_length=54, null=True, verbose_name='摘要')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='浏览量')),
                ('comment', models.PositiveIntegerField(default=0, verbose_name='点赞数')),
                ('topped', models.BooleanField(default=False, verbose_name='置顶')),
                ('category_id', models.PositiveIntegerField(default=0, verbose_name='分类id')),
                ('user_id', models.PositiveIntegerField(default=0, verbose_name='用户id')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, '管理员'), (2, '会员')], default=1, verbose_name='用户类型')),
                ('is_delete', models.PositiveSmallIntegerField(choices=[(0, '未删除'), (1, '已删除')], default=0, verbose_name='是否删除')),
            ],
            options={
                'db_table': 'p_article',
                'ordering': ['-last_modified_time'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PArticleCategory',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False, verbose_name='分类ID')),
                ('category_name', models.CharField(max_length=20, verbose_name='类名')),
                ('parent_category_id', models.PositiveIntegerField(default=0, verbose_name='父级分类id')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_modified_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('is_delete', models.PositiveSmallIntegerField(choices=[(0, '未删除'), (1, '已删除')], default=0, verbose_name='是否删除')),
            ],
            options={
                'db_table': 'p_article_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PArticleComment',
            fields=[
                ('article_comment_id', models.AutoField(primary_key=True, serialize=False, verbose_name='评论ID')),
                ('article_id', models.PositiveIntegerField(default=0, verbose_name='文章ID')),
                ('user_id', models.PositiveIntegerField(default=0, verbose_name='用户id')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, '管理员'), (2, '会员')], default=1, verbose_name='用户类型')),
                ('comment_content', models.TextField(verbose_name='评论内容')),
                ('reply_comment_id', models.PositiveIntegerField(default=0, verbose_name='回复的评论的id')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('is_delete', models.PositiveSmallIntegerField(choices=[(0, '未删除'), (1, '已删除')], default=0, verbose_name='是否删除')),
            ],
            options={
                'db_table': 'p_article_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PFriendLink',
            fields=[
                ('link_id', models.AutoField(primary_key=True, serialize=False, verbose_name='链接ID')),
                ('link_name', models.CharField(max_length=50, unique=True, verbose_name='链接名称')),
                ('link_url', models.CharField(max_length=200, verbose_name='链接地址')),
                ('link_icon', models.CharField(max_length=200, verbose_name='图片链接')),
                ('link_describe', models.CharField(max_length=200, verbose_name='链接描述')),
                ('is_delete', models.IntegerField(choices=[(0, '正常'), (1, '已删除')], default=0, verbose_name='是否被删除')),
                ('status', models.IntegerField(choices=[(0, '显示'), (1, '隐藏')], default=0, verbose_name='是否隐藏')),
                ('open_mode', models.IntegerField(choices=[(0, '新标签打开'), (1, '本窗口打开')], default=0, verbose_name='打开方式')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'db_table': 'p_friend_link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PMailRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='记录ID')),
                ('email', models.CharField(max_length=1000, verbose_name='邮件地址')),
                ('subject', models.CharField(max_length=200, verbose_name='邮件主题')),
                ('content', models.CharField(max_length=5000, verbose_name='邮件内容')),
                ('message', models.CharField(default='', max_length=500, verbose_name='结果内容')),
                ('status', models.IntegerField(choices=[(1, '成功'), (1, '失败')], verbose_name='发送状态')),
                ('is_delete', models.IntegerField(choices=[(0, '正常'), (1, '已删除')], default=0, verbose_name='是否被删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'db_table': 'p_mail_record',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PSlideCategory',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False, verbose_name='分类ID')),
                ('category_name', models.CharField(max_length=50, unique=True, verbose_name='分类名称')),
                ('category_identify', models.CharField(max_length=50, verbose_name='分类标识')),
                ('category_remark', models.CharField(max_length=200, verbose_name='备注')),
                ('is_delete', models.IntegerField(choices=[(0, '正常'), (1, '已删除')], default=0, verbose_name='是否被删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'db_table': 'p_slide_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PSlideManage',
            fields=[
                ('slide_id', models.AutoField(primary_key=True, serialize=False, verbose_name='管理ID')),
                ('slide_title', models.CharField(max_length=50, unique=True, verbose_name='管理标题')),
                ('href_url', models.CharField(max_length=200, verbose_name='跳转链接')),
                ('picture_url', models.CharField(max_length=200, verbose_name='图片链接')),
                ('describe', models.CharField(max_length=200, verbose_name='管理描述')),
                ('content', models.CharField(max_length=200, verbose_name='管理内容')),
                ('is_delete', models.IntegerField(choices=[(0, '正常'), (1, '已删除')], default=0, verbose_name='是否被删除')),
                ('status', models.IntegerField(choices=[(0, '显示'), (1, '隐藏')], default=0, verbose_name='是否隐藏')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('category_id', models.PositiveIntegerField(default=0, verbose_name='分类id')),
            ],
            options={
                'db_table': 'p_slide_manage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PSystemMenu',
            fields=[
                ('menu_id', models.AutoField(primary_key=True, serialize=False, verbose_name='菜单ID')),
                ('menu_name', models.CharField(max_length=50, verbose_name='菜单名')),
                ('menu_description', models.CharField(max_length=1000, verbose_name='菜单描述')),
                ('m_pid', models.IntegerField(verbose_name='父级菜单ID')),
                ('menu_type', models.IntegerField(choices=[(0, '仅菜单'), (1, '菜单及权限菜单'), (2, '仅权限菜单')], default=1, verbose_name='菜单类型')),
                ('menu_status', models.IntegerField(choices=[(0, '正常状态'), (1, '禁用状态')], verbose_name='菜单状态')),
                ('menu_icon', models.CharField(default='', max_length=20, verbose_name='菜单图标')),
                ('default_route', models.CharField(default='', max_length=10, verbose_name='默认路由ID')),
                ('permission_route', models.CharField(default='', max_length=1000, verbose_name='权限路由ID,json字符串')),
                ('sort', models.IntegerField(default=0, verbose_name='排序，升序排列')),
                ('is_delete', models.IntegerField(choices=[(0, '正常'), (1, '以删除')], default=0, verbose_name='是否被删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'db_table': 'p_system_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PSystemRoute',
            fields=[
                ('route_id', models.AutoField(primary_key=True, serialize=False, verbose_name='路由ID')),
                ('route_name', models.CharField(max_length=50, unique=True, verbose_name='路由名')),
                ('route_alias_name', models.CharField(max_length=50, verbose_name='路由别名')),
                ('is_delete', models.IntegerField(choices=[(0, '正常'), (1, '以删除')], default=0, verbose_name='是否被删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'db_table': 'p_system_route',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PTopic',
            fields=[
                ('topic_id', models.AutoField(primary_key=True, serialize=False, verbose_name='话题ID')),
                ('user_id', models.PositiveIntegerField(default=0, verbose_name='用户ID')),
                ('topic_title', models.CharField(max_length=50, verbose_name='话题标题')),
                ('content', models.TextField(verbose_name='话题内容')),
                ('view_num', models.PositiveIntegerField(default=0, verbose_name='浏览量')),
                ('comment_num', models.PositiveIntegerField(default=0, verbose_name='评论数')),
                ('is_delete', models.IntegerField(choices=[(0, '正常'), (1, '已删除')], default=0, verbose_name='是否被删除')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, '管理员'), (2, '会员')], default=1, verbose_name='用户类型')),
            ],
            options={
                'db_table': 'p_topic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PUsers',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False, verbose_name='用户ID')),
                ('username', models.CharField(max_length=120, unique=True, verbose_name='用户名')),
                ('password', models.CharField(max_length=128, verbose_name='密码')),
                ('nickname', models.CharField(max_length=20, verbose_name='昵称')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], default='female', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='手机号码')),
                ('email', models.CharField(max_length=128, unique=True, verbose_name='邮箱')),
                ('last_login', models.DateTimeField(auto_now=True, null=True, verbose_name='最后登录时间')),
                ('login_ip', models.CharField(default='0.0.0.0', max_length=50, null=True, verbose_name='最后登录IP')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('is_active', models.PositiveSmallIntegerField(choices=[(0, '启用'), (1, '禁用')], default=0, verbose_name='是否禁用')),
                ('is_delete', models.PositiveSmallIntegerField(choices=[(0, '未删除'), (1, '已删除')], default=0, verbose_name='是否删除')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
                'db_table': 'p_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PTopicComment',
            fields=[
                ('topic_comment_id', models.AutoField(primary_key=True, serialize=False, verbose_name='评论ID')),
                ('topic_id', models.PositiveIntegerField(default=0, verbose_name='话题ID')),
                ('user_id', models.PositiveIntegerField(default=0, verbose_name='用户id')),
                ('comment_content', models.TextField(verbose_name='评论内容')),
                ('reply_comment_id', models.PositiveIntegerField(default=0, verbose_name='回复的评论的id')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('is_delete', models.PositiveSmallIntegerField(choices=[(0, '未删除'), (1, '已删除')], default=0, verbose_name='是否删除')),
            ],
            options={
                'db_table': 'p_topic_comment',
            },
        ),
    ]
